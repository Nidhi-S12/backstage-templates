apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: deploy-nodejs-to-ec2-complete
  title: Deploy Node.js App to AWS EC2 (Complete)
  description: Create a deployment repository with GitHub Actions to provision EC2 and deploy your Node.js app
  tags:
    - nodejs
    - aws
    - ec2
    - deployment
    - github-actions
spec:
  owner: user:default/guest
  type: service
  parameters:
    - title: Application Information
      required:
        - deployment_name
        - source_repo_url
        - target_repo_name
        - owner
      properties:
        deployment_name:
          title: Deployment Name
          type: string
          description: Name for your deployment (will be used for EC2 instance and resources)
          pattern: '^[a-zA-Z0-9-]+$'
        source_repo_url:
          title: Source Repository URL
          type: string
          description: URL of your existing Node.js application repository
          pattern: '^https://github\.com/[^/]+/[^/]+$'
        target_repo_name:
          title: New Repository Name
          type: string
          description: Name for the new deployment repository that will be created
          pattern: '^[a-zA-Z0-9-]+$'
        owner:
          title: Owner
          type: string
          description: Owner of this deployment
          default: user:default/guest
        description:
          title: Description
          type: string
          description: Brief description of your application
          
    - title: AWS Configuration
      required:
        - instance_type
        - region
        - key_pair_name
      properties:
        instance_type:
          title: EC2 Instance Type
          type: string
          description: AWS EC2 instance type
          default: t2.micro
          enum:
            - t2.micro
            - t2.small
            - t2.medium
            - t3.micro
            - t3.small
            - t3.medium
        region:
          title: AWS Region
          type: string
          description: AWS region for deployment
          default: us-east-1
          enum:
            - us-east-1
            - us-west-2
            - eu-west-1
            - ap-southeast-1
        key_pair_name:
          title: Key Pair Name
          type: string
          description: AWS Key Pair name for SSH access (must exist in your AWS account)
        availability_zone:
          title: Availability Zone
          type: string
          description: Specific availability zone (e.g., us-east-1a)
          default: us-east-1a
          
    - title: Application Configuration
      properties:
        node_version:
          title: Node.js Version
          type: string
          description: Node.js version to install
          default: "18"
          enum:
            - "16"
            - "18"
            - "20"
        app_port:
          title: Application Port
          type: number
          description: Port your Node.js app runs on
          default: 3000
        environment:
          title: Environment
          type: string
          description: Deployment environment
          default: production
          enum:
            - development
            - staging
            - production
            
  steps:
    - id: fetch-source
      name: Fetch Source Application
      action: fetch:plain
      input:
        url: ${{ parameters.source_repo_url }}
        targetPath: ./app
        
    - id: fetch-template
      name: Fetch Deployment Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          deployment_name: ${{ parameters.deployment_name }}
          source_repo_url: ${{ parameters.source_repo_url }}
          target_repo_name: ${{ parameters.target_repo_name }}
          owner: ${{ parameters.owner }}
          description: ${{ parameters.description }}
          instance_type: ${{ parameters.instance_type }}
          region: ${{ parameters.region }}
          key_pair_name: ${{ parameters.key_pair_name }}
          availability_zone: ${{ parameters.availability_zone }}
          node_version: ${{ parameters.node_version }}
          app_port: ${{ parameters.app_port }}
          environment: ${{ parameters.environment }}
          
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: Deployment repository for ${{ parameters.deployment_name }}
        repoUrl: github.com?repo=${{ parameters.target_repo_name }}&owner=${{ user.entity.metadata.name }}
        defaultBranch: main
        gitCommitMessage: 'Initial deployment setup for ${{ parameters.deployment_name }}'
        
    - id: register
      name: Register in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
    text:
      - title: Deployment Repository
        content: ${{ steps.publish.output.remoteUrl }}
      - title: Next Steps
        content: |
          ðŸš€ Your deployment repository has been created!
          
          **To deploy your application:**
          1. Go to your new repository: ${{ steps.publish.output.remoteUrl }}
          2. Go to Actions tab
          3. Run the "Deploy to EC2" workflow
          4. Your app will be deployed to a new EC2 instance
          
          **Repository includes:**
          - Your application code
          - GitHub Actions for EC2 provisioning
          - Terraform configuration
          - Deployment scripts
